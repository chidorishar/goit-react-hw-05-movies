{"version":3,"file":"static/js/570.d9c45fe1.chunk.js","mappings":"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","sources":["components/common/shared.styled.jsx","pages/MovieDetail.jsx","services/MovieAPI.js"],"sourcesContent":["import { color, flexbox, layout, space } from 'styled-system';\n\nimport styled from 'styled-components';\n\nexport const Box = styled.div(space, color, layout, flexbox);\n\nexport const Container = styled.div`\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 0 16px;\n`;\n\nexport const Section = styled.section`\n  padding: ${({ theme: { space } }) => space[4]}px;\n`;\n","import { Suspense, useEffect, useState } from 'react';\nimport { Link, Outlet, useLocation, useParams } from 'react-router-dom';\n\nimport { Box, Container } from 'components/common/shared.styled';\n\nimport { getMovieDetailsByID } from 'services/MovieAPI';\n\nconst LINKS = [\n  { name: 'Cast', to: 'cast' },\n  { name: 'Reviews', to: 'reviews' },\n];\n\nexport default function MovieDetail() {\n  const { movieId } = useParams();\n  const [movieDetails, setMovieDetails] = useState(null);\n  const location = useLocation();\n\n  useEffect(() => {\n    async function getMovieDetails() {\n      setMovieDetails(await getMovieDetailsByID(movieId));\n    }\n\n    getMovieDetails();\n  }, [movieId]);\n\n  //no data - no markup\n  if (!movieDetails) return null;\n\n  //else render details\n  const {\n    title,\n    original_title,\n    original_name,\n    poster_path,\n    vote_average,\n    overview,\n    genres,\n  } = movieDetails ?? {};\n  const movieGenresNames = genres?.map(\n    ({ name }, index) => name + (index !== genres.length - 1 ? ', ' : '')\n  );\n  const movieName = title ?? original_title ?? original_name ?? 'No data!';\n\n  return (\n    <Container>\n      <main>\n        {' '}\n        <Link to={location.state?.from ?? '/'}>Go back</Link>\n        {/* GENERAL INFO */}\n        <Box display=\"flexbox\" mb={3}>\n          {poster_path ? (\n            <img\n              src={`https://image.tmdb.org/t/p/w500/${poster_path}`}\n              alt={`Poster for movie ${movieName}`}\n              width=\"300\"\n            />\n          ) : (\n            <Box width=\"normal\" height=\"wide\" bg=\"grey\" />\n          )}\n          <Box ml={3} p={4} width=\"wide\">\n            <h2>{movieName}</h2>\n            <p>User score: {Math.ceil(vote_average * 10)}%</p>\n            <h3>Overview</h3>\n            <p>{overview}</p>\n            <h3>Genres</h3>\n            <p>{movieGenresNames}</p>\n          </Box>\n        </Box>\n        {/* ADDITIONAL INFO */}\n        <Box>\n          {' '}\n          <p>Additional info</p>\n          <ul>\n            {LINKS.map(({ to, name }) => (\n              <li key={name}>\n                <Link to={to} state={{ from: location.state?.from ?? '/' }}>\n                  {name}\n                </Link>\n              </li>\n            ))}\n          </ul>\n        </Box>\n      </main>\n\n      {/* CHILDREN */}\n      <Suspense fallback={<div>Loading...</div>}>\n        <Outlet />\n      </Suspense>\n    </Container>\n  );\n}\n","import axios from 'axios';\n\nconst API_KEY = 'a7cdca3ac9a73d688c9dec2c3c2e067b';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nexport async function getTrendingMovies() {\n  const response = await getDataByRequest(\n    `trending/all/day?api_key=${API_KEY}`\n  );\n\n  return response.data.results;\n}\n\nexport async function getMoviesByName(name) {\n  const response = await getDataByRequest(\n    `search/movie?api_key=${API_KEY}&query=${name}`\n  );\n\n  return response.data.results;\n}\n\nexport async function getMovieDetailsByID(ID) {\n  const requests = [\n    `movie/${ID}?api_key=${API_KEY}`,\n    `tv/${ID}?api_key=${API_KEY}`,\n  ];\n\n  const response = await getMovieDetails(requests);\n\n  return response?.data;\n}\n\nexport async function getMovieReviewsByID(ID) {\n  const requests = [\n    `movie/${ID}/reviews?api_key=${API_KEY}`,\n    `tv/${ID}/reviews?api_key=${API_KEY}`,\n  ];\n\n  const response = await getMovieDetails(requests);\n\n  return response?.data?.results;\n}\n\nexport async function getMovieCastByID(ID) {\n  const requests = [\n    `movie/${ID}/credits?api_key=${API_KEY}`,\n    `tv/${ID}/credits?api_key=${API_KEY}`,\n  ];\n\n  const response = await getMovieDetails(requests);\n\n  return response?.data?.cast;\n}\n\nasync function getMovieDetails(requests) {\n  let response = null;\n\n  for (const request of requests) {\n    response = await getDataByRequest(request);\n    if (response) break;\n  }\n\n  return response;\n}\n\nasync function getDataByRequest(request) {\n  let response = null;\n\n  try {\n    response = await axios(request);\n  } catch (error) {\n    console.log(`Error! Server responded with status: ${error.code}. \n    Error message: ${error.message}`);\n\n    return null;\n  }\n\n  return response;\n}\n"],"names":["Box","styled","space","color","layout","flexbox","Container","Section","theme","LINKS","name","to","MovieDetail","movieId","useParams","useState","movieDetails","setMovieDetails","location","useLocation","useEffect","getMovieDetailsByID","getMovieDetails","title","original_title","original_name","poster_path","vote_average","overview","genres","movieGenresNames","map","index","length","movieName","state","from","display","mb","src","alt","width","height","bg","ml","p","Math","ceil","Suspense","fallback","API_KEY","getTrendingMovies","getDataByRequest","response","data","results","getMoviesByName","ID","requests","getMovieReviewsByID","getMovieCastByID","cast","request","axios","console","log","code","message"],"sourceRoot":""}